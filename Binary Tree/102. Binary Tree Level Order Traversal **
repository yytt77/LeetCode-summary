Given the root of a binary tree, return the level order traversal of its nodes' values. (i.e., from left to right, level by level).

Example 1:
Input: root = [3,9,20,null,null,15,7]
Output: [[3],[9,20],[15,7]]

Example 2:
Input: root = [1]
Output: [[1]]

Example 3:
Input: root = []
Output: []
______________________________________________________________________________________________________________________________

// use temp array to save result and save into res;

var levelOrder = function(root) {
    let res = []
    let queue = [root];
    if (!root) {
        return []
    }
    while (queue.length > 0) {
        let temp = [];
        let len = queue.length;
         
        for (let i = 0; i < len; i++) {
            let node = queue.shift();
            if (node === null) {
                continue;
            }
            temp.push(node.val);
            if (node.left) {
               queue.push(node.left);                
            }
            if (node.right) {
                queue.push(node.right);    
            }         
        }
        res.push(temp)
    }
     return res;
};

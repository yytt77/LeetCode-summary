You are given two lists of closed intervals, firstList and secondList, where firstList[i] = [starti, endi] and secondList[j] = [startj, endj]. Each list of intervals is pairwise disjoint and in sorted order.

Return the intersection of these two interval lists.

A closed interval [a, b] (with a <= b) denotes the set of real numbers x with a <= x <= b.

The intersection of two closed intervals is a set of real numbers that are either empty or represented as a closed interval. For example, the intersection of [1, 3] and [2, 4] is [2, 3].

Example 1:
Input: firstList = [[0,2],[5,10],[13,23],[24,25]], secondList = [[1,5],[8,12],[15,24],[25,26]]
Output: [[1,2],[5,5],[8,10],[15,23],[24,24],[25,25]]

Example 2:
Input: firstList = [[1,3],[5,9]], secondList = []
Output: []

____________________________________________________________________________________________________________________________________________________________________

var intervalIntersection = function(firstList, secondList) {
    var res = [];
    let first = 0;
    let second = 0;
    while (first < firstList.length && second < secondList.length) {
        let start = Math.max(firstList[first][0], secondList[second][0]);
        let end = Math.min(firstList[first][1], secondList[second][1]);
        // overlap
        if (start <= end) {
            res.push([start, end]);
        }
        // none-overlap
        if (firstList[first][1] < secondList[second][1]) {
            first ++;
        } else {
            second ++;
        }
    }
    return res;
};

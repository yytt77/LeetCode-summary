Given an array of intervals where intervals[i] = [starti, endi], merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input.

Example 1:
Input: intervals = [[1,3],[2,6],[8,10],[15,18]]
Output: [[1,6],[8,10],[15,18]]
Explanation: Since intervals [1,3] and [2,6] overlaps, merge them into [1,6].

Example 2:
Input: intervals = [[1,4],[4,5]]
Output: [[1,5]]
Explanation: Intervals [1,4] and [4,5] are considered overlapping.

________________________________________________________________________________________________________________________________________________________________________

var merge = function(intervals) {
    let res = [];
    intervals.sort( (a, b) => {
        return a[0] - b[0];
    })
    res.push(intervals[0]);
    
    for (var i = 1 ; i < intervals.length; i ++) {
        pre = res[res.length -1];
        if (pre[1] < intervals[i][0]) {
            res.push(intervals[i]);
        } else {
            pre[1] = Math.max(intervals[i][1], pre[1]);
        }
    }
    return res;
};

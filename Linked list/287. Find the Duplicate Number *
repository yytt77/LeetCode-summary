Given an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive.

There is only one repeated number in nums, return this repeated number.

You must solve the problem without modifying the array nums and uses only constant extra space.

Example 1:

Input: nums = [1,3,4,2,2]
Output: 2

Example 2:

Input: nums = [3,1,3,4,2]
Output: 3
___________________________________________________________________________________________________________________________________________________________________

// silimar to linked list cycle II, use fast and slow to find intersection first and then find begining of circle 

var findDuplicate = function(nums) {
    let slow = nums[0], fast = nums[nums[0]];
    while (slow !== fast) {
        slow = nums[slow];
        fast = nums[nums[fast]];
    }
    slow = 0;
    while(slow!==fast){
        slow = nums[slow];
        fast = nums[fast];
    }
    return slow;
};

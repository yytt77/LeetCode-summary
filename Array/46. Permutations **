Given an array nums of distinct integers, return all the possible permutations. You can return the answer in any order.

Example 1:
Input: nums = [1,2,3]
Output: [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]

Example 2:
Input: nums = [0,1]
Output: [[0,1],[1,0]]

Example 3:
Input: nums = [1]
Output: [[1]]
_________________________________________________________________________________________________________________________

var permute = function(nums) {
    
    var res = [];
    var used = [];
    
    const dfs = function(recorder) {
        if (recorder.length === nums.length) {
            res.push(recorder.slice());
        }
        for (var i = 0; i < nums.length; i++) {
            if (used[i]) continue;
            used[i] = true;
            recorder.push(nums[i]);
            dfs(recorder);
            recorder.pop();
            used[i] = false;
        }
    }
    dfs([]);
    return res;
};

34. Find First and Last Position of Element in Sorted Array

Given an array of integers nums sorted in non-decreasing order, find the starting and ending position of a given target value.
If target is not found in the array, return [-1, -1].
You must write an algorithm with O(log n) runtime complexity.

Example 1:

Input: nums = [5,7,7,8,8,10], target = 8
Output: [3,4]
Example 2:

Input: nums = [5,7,7,8,8,10], target = 6
Output: [-1,-1]
Example 3:

Input: nums = [], target = 0
Output: [-1,-1]

__________________________________________________________________________________________________________________________________________________________________________________
var searchRange = function(nums, target) {
    let low = 0;
    let high = nums.length - 1;
    let res = [];
    while (low <= high) {
        let mid = Math.floor( (low + high) / 2);
        // When we find target value, we create addtional two pointer to find the range.
        if (nums[mid] === target) {
            let left = mid;
            let right = mid;
            while(nums[left] === target && left >=0) {
                left --;
            }
            res.push(left + 1);
            while(nums[right] === target && right <=nums.length - 1) {
                right ++;
            }
            res.push((right) - 1);
            return res;
        } else if (nums[mid] > target) {
            high = mid - 1;
        } else {
            low = mid + 1;
        }
    }
    return [-1, -1]
};

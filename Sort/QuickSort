// [4,6,9,1,2,5,3]
// [3,2,1,4,6,9,5]
//        4
//  3,2,1    6,9,5
//      3      6
//  2,1      5  9
//    2
//  1

https://www.google.com/search?sxsrf=APwXEddG2s9umd4CnDjww2DJ0mzkPIVtgA:1686358795422&q=quick+sort+js&tbm=vid&sa=X&ved=2ahUKEwi91tuHwLf_AhV1GFkFHfTXAawQ0pQJegQIChAB&biw=1745&bih=881&dpr=1.1#fpstate=ive&vld=cid:9c048bcd,vid:GfM5z7_WGQE
________________________________________________________________________________________________

let pivot = function (nums, left, right) {
    let p = right;
    let j = left;
    let i = left - 1;

    while (j < p) {
        if (nums[j] < nums[p]) {
            i++;
            [nums[i], nums[j]] = [nums[j], nums[i]];
            j++;
        } else {
            j++;
        }
    }
    i++;
    [nums[i], nums[p]] = [nums[p], nums[i]];
    return i;
}

const quickSort = function(arr, start = 0, end = arr.length - 1) {
  if (start < end) {
    let prviotIndex = prviot(arr, start, end);
    quickSort(arr, start, prviotIndex - 1);
    quickSort(arr, prviotIndex + 1, end);
  }
  return arr;
}

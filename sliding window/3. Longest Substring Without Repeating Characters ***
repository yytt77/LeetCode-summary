Given a string s, find the length of the longest substring without repeating characters.

Example 1:
Input: s = "abcabcbb"
Output: 3
Explanation: The answer is "abc", with the length of 3.

Example 2:
Input: s = "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.

Example 3:
Input: s = "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3.
Notice that the answer must be a substring, "pwke" is a subsequence and not a substring.

___________________________________________________________________________________________________________________________________________________
var lengthOfLongestSubstring = function(s) {
    const res = new Set();
    let longest = 0;
    let left = 0;
    let right = 0;
    
    while (left < s.length && right < s.length) {
        if (!res.has(s[right])) {
            res.add(s[right]);
            longest = Math.max(longest, right - left + 1);
            right++;
        } else {
            res.delete(s[left]);
            left ++;
        }
    }
    return longest;
};
